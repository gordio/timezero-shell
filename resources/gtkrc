gtk_color_scheme = "fg_color:#FBF0DE\nbg_color:#3D3830\nbase_color:#36322B\ntext_color:#fff\nselected_bg_color:#1E1A15\nselected_fg_color:#fff\ntooltip_bg_color:#14140F\ntooltip_fg_color:#F5F5B5"
gtk-icon-sizes = "panel-menu=24,24"

style "murrine-default" {
	########
	# Style Properties
	########
	GtkWidget      ::focus-line-width = 1
	GtkButton      ::child-displacement-x = 1
	GtkButton      ::child-displacement-y = 1
	GtkButton      ::default-border       = { 0, 0, 0, 0 }
	GtkCheckButton ::indicator-size       = 14

	GtkPaned       ::handle-size          = 6

	GtkRange       ::trough-border        = 0
	#GtkRange       ::stepper-spacing	 = 3
	#GtkRange       ::trough-under-steppers	 = 3
	GtkRange       ::slider-width         = 12
	GtkRange       ::stepper-size         = 11

	GtkScale       ::slider-length        = 13
	GtkScrollbar   ::has-backward-stepper        = 0
	GtkScrollbar   ::has-forward-stepper        = 0
	GtkScale       ::trough-side-details  = 0	       # 0 = thin slider, >0 = thick slider
	GtkScrollbar   ::min-slider-length    = 20

	GtkScrolledWindow::scrollbar-spacing	= 1

	GtkNotebook::arrow-spacing = 4
	GtkNotebook::tab-overlap = 3
	GtkNotebook::tab-curvature = 5

	GtkMenuBar     ::internal-padding     = 0
	GtkExpander    ::expander-size        = 16
	GtkToolbar     ::internal-padding     = 1
	GtkTreeView    ::expander-size        = 12
	GtkTreeView    ::vertical-separator   = 0

	GtkMenu        ::horizontal-padding   = 0
	GtkMenu        ::vertical-padding     = 0

	GtkToolbar     :: shadow-type          = GTK_SHADOW_NONE
	GtkMenuBar     :: shadow-type          = GTK_SHADOW_NONE

	#GtkWidget      :: link-color           = @fg_color
	#GtkWidget      :: visited-link-color   = shade(0.2, @fg_color)

	xthickness = 1
	ythickness = 1

	fg[NORMAL]        = @fg_color               # Metacity and mouseover, Most text
	fg[PRELIGHT]      = "DarkGoldenrod"         # Text when mouseover
	fg[ACTIVE]        = shade(0.8, @text_color) # Text when mouseclicking button, Tabs, Active window list
	fg[SELECTED]      = @selected_fg_color      # Metacity X when window selected
	fg[INSENSITIVE]   = shade(0.17, @fg_color)  # Insensitive Text

	bg[NORMAL]        = @bg_color              # Normal Background, inactive Metacity bar, buttons
	bg[PRELIGHT]      = shade(1.1, @bg_color)  # Mouseover buttons
	bg[ACTIVE]        = shade(0.77, @bg_color) # Mouseclicking, Tabs, active window list
	bg[SELECTED]      = @selected_bg_color     # Metacity Bar
	bg[INSENSITIVE]   = @bg_color              # Insensitive buttons

	base[NORMAL]      = @base_color             # Background, most
	base[PRELIGHT]    = shade(0.9, @bg_color)   # Mouseover menu
	base[ACTIVE]      = @selected_bg_color      # Menu active item in inactive window
	base[SELECTED]    = @selected_bg_color      # Menu active item in active window
	base[INSENSITIVE] = @bg_color               # Background, insensitive

	text[NORMAL]      = @text_color             # Text in window
	text[PRELIGHT]    = @text_color             # Text on Mouseover
	text[ACTIVE]      = @selected_fg_color	    # Active text in inactive window
	text[SELECTED]    = @selected_fg_color      # Active text in active window
	text[INSENSITIVE] = shade(0.7, @text_color) # Insensitive text

	engine "murrine" {
		animation           = TRUE  # FALSE = disabled, TRUE = enabled
		colorize_scrollbar  = FALSE # FALSE = disabled, TRUE = enabled
		contrast            = 1.07  # 0.8 for less contrast, more than 1.0 for more contrast on borders
		glazestyle          = 5     # 0 = flat highlight, 1 = curved highlight, 2 = concave style, 3 = top curved highlight, 4 = beryl highlight
		gradient_shades     = { 0.6, 0.9, 1.0, 1.1 }
		highlight_shade     = 1.23  # set highlight amount for buttons or widgets
		lightborder_shade   = 1.5   # sets lightborder amount for buttons or widgets
		lightborderstyle    = 1     # 0 = lightborder on top side, 1 = lightborder on all sides
		listviewheaderstyle = 0     # 0 = flat, 1 = glassy, 2 = raised
		listviewstyle       = 1     # 0 = nothing, 1 = dotted
		menubaritemstyle    = 1     # 0 = menuitem look, 1 = button look
		menubarstyle        = 0     # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
		menuitemstyle       = 1     # 0 = flat, 1 = glassy, 2 = striped
		menustyle           = 0     # 0 = no vertical menu stripe, 1 = display vertical menu stripe
		reliefstyle         = 2     # 0 = flat, 1 = inset, 2 = shadow
		rgba                = TRUE  # FALSE = disabled, TRUE = enabled
		roundness           = 2     # 0 = squared, 1 = old default, more will increase roundness
		scrollbarstyle      = 2     # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes, 4 = diagonal stripes and handles, 5 = horizontal stripes, 6 = horizontal stripes and handles
		sliderstyle         = 0     # 0 = nothing added, 1 = handles
		stepperstyle        = 1     # 0 = standard, 1 = integrated stepper handles, 2 = unknown
		toolbarstyle        = 0     # 0 = flat, 1 = glassy, 2 = gradient
		glow_shade          = 1.4
		glowstyle           = 3
	}
}

style "murrine-wide" {
	xthickness = 2
	ythickness = 2
}

style "murrine-wider" {
	xthickness = 3
	ythickness = 3
}

style "murrine-notebook" {
	xthickness = 1
	ythickness = 1

	engine "murrine" {
		highlight_shade = 1.25
		lightborder_shade = 1.1
		roundness = 2
	}

	bg[NORMAL] = shade(0.9, @bg_color)
	bg[ACTIVE] = shade(1.05, @bg_color)
}

style "murrine-tasklist" = "murrine-wide" {
}

style "murrine-menu" = "murrine-wider" {
	bg[NORMAL]   = shade(1.15, @bg_color)
	bg[PRELIGHT] = mix(0.5, @selected_bg_color, shade(0.97, "DarkGoldenrod"))
	bg[SELECTED] = mix(0.4, shade(0.7, @bg_color), @selected_bg_color)
}

style "murrine-menubar" {
	#bg[NORMAL]= shade(0.85, @bg_color) # dark menu bg
	bg[PRELIGHT] = shade(0.97, @selected_bg_color)
	bg[SELECTED] = shade(0.97, @selected_bg_color)
}

style "murrine-menu-item" = "murrine-wider" {
	bg[PRELIGHT] = mix(0.5, @selected_bg_color, shade(0.97, "DarkGoldenrod"))
	bg[SELECTED] = mix(0.5, @selected_bg_color, shade(0.97, "DarkGoldenrod"))
	#bg[SELECTED] = shade(1.15, @bg_color)
	fg[PRELIGHT] = @selected_fg_color

	engine "murrine" {
		contrast = 1.3
		roundness = 3
	}
}

style "murrine-separator-menu-item" {
}

style "murrine-treeview" {
	bg[NORMAL]   = shade(1.5, @bg_color)
	fg[NORMAL]   = shade(0.5, @bg_color)
	fg[PRELIGHT] = shade(0.5, @bg_color)
}

style "murrine-treeview-header" = "murrine-default" {
	bg[NORMAL]      = shade(0.95, @bg_color)
	bg[INSENSITIVE] = shade(0.93, @bg_color)
}

style "murrine-frame-title" {
	fg[NORMAL] = lighter(@fg_color)
}

style "murrine-range" = "murrine-wide" {
	fg[NORMAL]        = "#A20"
	fg[PRELIGHT]      = "#A20"
	fg[ACTIVE]        = "#A20"
	fg[SELECTED]      = "#A20"
	fg[INSENSITIVE]   = "#A20"

	bg[NORMAL]        = "#A20"           # Normal Background, inactive Metacity bar, buttons
	bg[PRELIGHT]      = "#A20"
	bg[ACTIVE]        = "#A20"
	bg[SELECTED]      = "#A20"
	bg[INSENSITIVE]   = "#A20"

	base[NORMAL]      = "#A20"
	base[PRELIGHT]    = "#A20"
	base[ACTIVE]      = "#A20"
	base[SELECTED]    = "#A20"
	base[INSENSITIVE] = "#A20"

	text[NORMAL]      = "#A20"            # Text in window
	text[PRELIGHT]    = "#A20"
	text[ACTIVE]      = "#A20"
	text[SELECTED]    = "#A20"
	text[INSENSITIVE] = "#A20"
	engine "murrine" {
	}
}
style "murrine-tooltips" = "murrine-wider" {
	xthickness   = 0
	ythickness   = 0

	bg[NORMAL] = @tooltip_bg_color
	fg[NORMAL] = @tooltip_fg_color
}

style "murrine-progressbar" {
	xthickness   = 0
	ythickness   = 0

	fg[PRELIGHT] = @selected_fg_color
	bg[ACTIVE]   = shade(1.4, @selected_bg_color)
	bg[SELECTED] = "#A10"

	engine "murrine" {
		contrast = 2.0 # Darken unfilled progressbar background
	}
}

style "murrine-statusbar" {
}

style "murrine-comboboxentry" {
}

style "murrine-spinbutton" {
	bg[NORMAL]      = shade(0.95, @bg_color) # need to fix rectangular border bug on spinbutton
	bg[INSENSITIVE] = shade(0.99, @bg_color)
}

style "murrine-scale" {
	GtkRange::slider-width = 13

	bg[NORMAL]      = shade(0.95, @bg_color)
	bg[INSENSITIVE] = shade(0.99, @bg_color)

	engine "murrine" {
		contrast = 1.4
		roundness = 10
	}
}

style "murrine-hscale" {
}

style "murrine-vscale" {
}

style "murrine-scrollbar" {
	bg[NORMAL]      = shade(0.7, @bg_color)
	bg[SELECTED]    = mix(0.5, @selected_bg_color, shade(0.97, "DarkGoldenrod"))
	bg[ACTIVE]      = shade(0.7, @bg_color)
	bg[INSENSITIVE] = shade(0.7, @bg_color)
	fg[NORMAL]      = shade(0.7, @bg_color)
	fg[PRELIGHT]    = shade(0.7, @bg_color)
	fg[INSENSITIVE] = shade(0.7, @bg_color)

	engine "murrine"
	{
		contrast = 1.4
		roundness = 1
		#lightborder_shade = 1.5
		#highlight_shade = 1.8
	}
}

style "murrine-hscrollbar" {
}

style "murrine-vscrollbar" {
}

style "murrine-nautilus-location" {
	bg[NORMAL] = @selected_bg_color
}

style "metacity-frame" {
	bg[NORMAL] = @bg_color
}

style "murrine-radiocheck" = "murrine-default" {
	base[NORMAL]   = @bg_color
	text[NORMAL]   = @fg_color             # Text in window
	text[PRELIGHT] = @fg_color             # Text on Mouseover

	engine "murrine"
	{
		highlight_shade = 1.0
	}
}

style "murrine-panel" {
	bg[NORMAL]    = shade(0.85, @bg_color) # should match bg[NORMAL] of "murrine-menubar"
}


style "murrine-button" {
	xthickness    = 2
	ythickness    = 2

	fg[PRELIGHT]  = @selected_fg_color
	bg[ACTIVE]    = shade(1.4, @selected_bg_color)
	bg[SELECTED]  = "#BB1"
	bg[PRELIGHT]    = shade(1.08, @bg_color)
}

#########################################
# Matches
#########################################

# Theme radio buttons and checkmarks
class "GtkRadio*" style "murrine-radiocheck"
class "GtkCheck*" style "murrine-radiocheck"

# Keep proper colour for Metacity
class "MetaFrames" style "metacity-frame"
#class "GtkWindow" style "metacity-frame"

# Theme default style is applied to every widget
class "GtkWidget"    					style "murrine-default"

# Increase the x/ythickness in some widgets
class "GtkToolbar"   					style "murrine-default"
class "GtkRange"     					style "murrine-wide"
class "GtkFrame"     					style "murrine-wide"
class "GtkSeparator" 					style "murrine-wide"
class "GtkEntry"     					style "murrine-wider"

class "GtkSpinButton"  					style "murrine-spinbutton"
class "GtkScale"       					style "murrine-scale"
class "GtkVScale"      					style "murrine-vscale"
class "GtkHScale"      					style "murrine-hscale"
class "GtkScrollbar"   					style "murrine-scrollbar"
class "GtkVScrollbar"  					style "murrine-vscrollbar"
class "GtkHScrollbar"  					style "murrine-hscrollbar"

# General matching following, the order is choosen so that the right styles override each other
# eg. progressbar needs to be more important then the menu match.

# This is not perfect, it could be done better
#(That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>"     	style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkDrawingArea>"		style "murrine-notebook"
widget_class "*<GtkNotebook>*<GtkLayout>"       	style "murrine-notebook"

widget_class "*<GtkButton>"      			style "murrine-button"
widget_class "*<GtkNotebook>"    			style "murrine-notebook"
widget_class "*<GtkStatusbar>*"  			style "murrine-statusbar"

widget_class "*<GtkComboBoxEntry>*"			style "murrine-comboboxentry"
widget_class "*<GtkCombo>*"         			style "murrine-comboboxentry"

widget_class "*<GtkMenuBar>*"           		style "murrine-menubar"
widget_class "*<GtkMenu>*"              		style "murrine-menu"
widget_class "*<GtkMenuItem>*"          		style "murrine-menu-item"
widget_class "*<GtkSeparatorMenuItem>*" 		style "murrine-separator-menu-item"

widget_class "*.<GtkFrame>.<GtkLabel>" 			style "murrine-frame-title"
widget_class "*.<GtkTreeView>*"        			style "murrine-treeview"

widget_class "*<GtkProgressBar>"       			style "murrine-progressbar"

# Treeview header
widget_class "*.<GtkTreeView>.<GtkButton>" 		style "murrine-treeview-header"
widget_class "*.<GtkCTree>.<GtkButton>"    		style "murrine-treeview-header"
widget_class "*.<GtkList>.<GtkButton>"     		style "murrine-treeview-header"
widget_class "*.<GtkCList>.<GtkButton>"    		style "murrine-treeview-header"
widget_class "*.<GtkTreeView>*<GtkLabel>*"		style "murrine-treeview-header"         # DARK: ensure GtkTreeView header text is light
widget_class "*.<GtkTreeView>*<GtkArrow>*"		style:highest "murrine-treeview-header" # DARK: ensure GtkArrows are light

# Workarounds for Evolution
widget_class "*.ETable.ECanvas"    			style "murrine-treeview-header"
widget_class "*.ETree.ECanvas"    			style "murrine-treeview-header"

# The window of the tooltip is called "gtk-tooltip"
################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
#(It will involve setting different priorities, etc.)
################################
widget "gtk-tooltip*" 					style "murrine-tooltips"

###################################################
# Special cases and work arounds
###################################################

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" 			style : highest "murrine-nautilus-location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that the work around assumes that the combobox is _not_ in
# appears-as-list mode.
# Similar hack also in the menuitem style.
# This style does not affect GtkComboBoxEntry, it does have an effect
# on comboboxes in appears-as-list mode though.
style "murrine-combobox-text-color-workaround" {
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = shade(0.17, @fg_color)
}
widget_class "*.<GtkComboBox>.<GtkCellView>"		style "murrine-combobox-text-color-workaround"

style "murrine-menuitem-text-is-fg-color-workaround" {
	text[NORMAL]        = @fg_color
	text[PRELIGHT]      = @selected_fg_color
	text[SELECTED]      = @selected_fg_color
	text[ACTIVE]        = @fg_color
	text[INSENSITIVE]   = shade(0.17, @fg_color)
}

widget "*.gtk-combobox-popup-menu.*"   			style "murrine-menuitem-text-is-fg-color-workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the
# base color set.
style "murrine-fg-is-text-color-workaround" {
	fg[NORMAL]      = @text_color
	fg[PRELIGHT]    = @text_color
	fg[ACTIVE]      = @selected_fg_color
	fg[SELECTED]    = @selected_fg_color
	fg[INSENSITIVE] = shade(0.17, @fg_color)
}

widget_class "*<GtkListItem>*" 				style "murrine-fg-is-text-color-workaround"

# The same problem also exists for GtkCList and GtkCTree
# Only match GtkCList and not the parent widgets, because that would also change the headers.
widget_class "*<GtkCList>" 				style "murrine-fg-is-text-color-workaround"

style "murrine-evo-new-button-workaround" {
	engine "murrine"
	{
		toolbarstyle = 0
	}
}

widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "murrine-evo-new-button-workaround"

style "murrine-darker" {
        fg[NORMAL] = shade(0.1, @fg_color)
        fg[ACTIVE] = shade(0.1, @fg_color)
}
widget "*auti*IconView*"                        style : highest "murrine-darker"

# Theme panel elements
widget "*PanelWidget*" 					style "murrine-panel"
widget "*PanelApplet*" 					style "murrine-panel"
widget "*fast-user-switch*"				style "murrine-panel" # workaround for Fast User Switch applet
class "PanelApp*" 					style "murrine-panel"
class "PanelToplevel*" 					style "murrine-panel"
widget_class "*Mail*" 					style "murrine-panel"
widget_class "*notif*" 					style "murrine-panel"
widget_class "*Notif*" 					style "murrine-panel"
